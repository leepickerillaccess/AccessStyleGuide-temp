
var DataTableBatchApi = {};
DataTableBatchApi.init = function(n, t, i) {
    var r = {},
        e, f, u;
    if (i = typeof i == "undefined" ? {} : i, e = function() {}, DataTableBatchApi.checkSetting(t.rowCallback, function() {
            e = t.rowCallback
        }), r.data = {}, r.data.selected = [], r.data.inserted = {}, r.data.edit = {}, r.data.deleted = [], r.newCount = 0, r.editForm = {}, r.editControl, r.cacheObjects = {}, r.lstNumberRows = [], r.footerControls = {}, $(n + " tr[data-editform='true']").length > 0 ? $(n + " tr[data-editform='true'] td").each(function(n, t) {
            r.editForm[n] = {};
            r.editForm[n].element = $(t).html();
            $(t).attr("data-call") !== undefined && (r.editForm[n].call = $(t).attr("data-call"), r.editForm[n].cache = !1, $(t).attr("data-cache") !== undefined && (r.editForm[n].cache = $(t).attr("data-cache")));
            $(t).children("input[type='number']").length != 0 && r.lstNumberRows.push(n)
        }) : $(n + " thead tr th").each(function(n) {
            r.editForm[n] = {};
            r.editForm[n].element = $('<input type="text" class="form-control input-small" />')
        }), $(n + " tfoot[data-summary='true']") !== undefined && $(n + " tfoot[data-summary='true'] tr th").each(function(n, t) {
            $(t).text().split("")[0] == "=" && (r.footerControls[n] = {}, r.footerControls[n].calculation = $(t).text().split("(")[0].replace("=", "").toLowerCase(), r.footerControls[n].columnToCalc = $(t).text().split("(")[1].replace(")", "").toLowerCase(), r.footerControls[n].format = $(t).attr("data-format") == undefined ? !1 : JSON.parse($(t).attr("data-format")), r.footerControls[n].column = n)
        }), r.grid = $(n).DataTable(t), r.batchSettings = i, r.domElements = {}, r.batchSettings.selectColumnName = typeof r.batchSettings.selectColumnName == "undefined" ? "#" : r.batchSettings.selectColumnName, r.batchSettings.customFooter = typeof r.batchSettings.customFooter == "undefined" ? !1 : r.batchSettings.customFooter, r.batchSettings.deleteButtonText = typeof r.batchSettings.deleteButtonText == "undefined" ? "Delete" : r.batchSettings.deleteButtonText, r.batchSettings.deleteNewButtonText = typeof r.batchSettings.deleteNewButtonText == "undefined" ? r.batchSettings.deleteButtonText : r.batchSettings.deleteNewButtonText, r.batchSettings.deleteButtonCss = typeof r.batchSettings.deleteButtonCss == "undefined" ? null : r.batchSettings.deleteButtonCss, r.batchSettings.unDeleteButtonText = typeof r.batchSettings.unDeleteButtonText == "undefined" ? "Undo Delete" : r.batchSettings.unDeleteButtonText, r.batchSettings.unDeleteButtonCss = typeof r.batchSettings.unDeleteButtonCss == "undefined" ? null : r.batchSettings.unDeleteButtonCss, r.batchSettings.actionColumnName = typeof r.batchSettings.actionColumnName == "undefined" ? "#" : r.batchSettings.actionColumnName, r.batchSettings.additionalActions = typeof r.batchSettings.additionalActions == "undefined" ? [] : r.batchSettings.additionalActions, typeof r.batchSettings.actions != "undefined") {
        for (r.domElements.actionsContainer = $("<div>"), DataTableBatchApi.checkSetting(r.batchSettings.actionsContainerId, function() {
                $(r.domElements.actionsContainer).attr("id", r.batchSettings.actionsContainerId)
            }, function() {
                $(r.domElements.actionsContainer).attr("id", "dtbBatchGridActions")
            }), DataTableBatchApi.checkSetting(r.batchSettings.actionsContainerClass, function() {
                $(r.domElements.actionsContainer).attr("class", r.batchSettings.actionsContainerClass)
            }), DataTableBatchApi.checkSetting(r.batchSettings.actionsContainerText, function() {
                $(r.domElements.actionsContainer).html(r.batchSettings.actionsContainerText)
            }), r.domElements.actionsSelect = $("<select>"), DataTableBatchApi.checkSetting(r.batchSettings.actionsSelectId, function() {
                $(r.domElements.actionsSelect).attr("id", r.batchSettings.actionsSelectId)
            }, function() {
                $(r.domElements.actionsSelect).attr("id", "dtbBatchGridActions_Select")
            }), $(r.domElements.actionsSelect).append('<option selected="selected" value="0"><\/option>'), f = 0; f < r.batchSettings.actions.split(",").length; f++) $(r.domElements.actionsSelect).append('<option value="' + (f + 1) + '">' + r.batchSettings.actions.split(",")[f] + "<\/option>");
        $(r.domElements.actionsContainer).append(r.domElements.actionsSelect);
        $(r.grid.settings()[0].nTable).before(r.domElements.actionsContainer);
        $("html").on("change", "#" + $(r.domElements.actionsSelect).attr("id"), function(n) {
            DataTableBatchApi.checkSetting(r.batchSettings.actionsSelectEvent, function() {
                r.batchSettings.actionsSelectEvent(n)
            });
            $(r.domElements.actionsSelect).val(0)
        })
    }
    r.batchSettings.debug = typeof r.batchSettings.debug == "undefined" ? !1 : r.batchSettings.debug;
    r.footerSetup = function() {
        $(n + " tfoot[data-summary='true'] tr th").each(function(n, t) {
            var u = r.batchSettings.showSelectionBox ? n - 1 : n,
                i, f;
            typeof r.footerControls[u] != "undefined" && (i = r.footerControls[u], f = i.calculation === "records" ? r.grid.data().length : DataTableBatchApi.calculations[i.calculation](r.grid.data(), r.data.deleted, i.columnToCalc, i.format), $(t).html(f))
        })
    };
    r.reset = function() {
        r.grid.ajax.reload();
        r.data.inserted = {};
        r.data.selected = [];
        r.data.deleted = [];
        r.data.edit = {}
    };
    r.batchSettings.showSelectionBox = typeof r.batchSettings.showSelectionBox == "undefined" ? !0 : r.batchSettings.showSelectionBox;
    r.batchSettings.showSelectionBox && ($(r.grid.settings()[0].nTable).children("thead").children("tr").children("th:first").before("<th>" + r.batchSettings.selectColumnName + "<\/th>"), r.batchSettings.customFooter ? $(r.grid.settings()[0].nTable).children("tfoot").children("tr").children("th:first").before("<th><\/th>") : $(r.grid.settings()[0].nTable).children("tfoot").children("tr").children("th:first").before("<th>" + r.batchSettings.selectColumnName + "<\/th>"));
    r.batchSettings.showActionColumn = typeof r.batchSettings.showActionColumn == "undefined" ? !0 : r.batchSettings.showDeleteColumn;
    r.batchSettings.showActionColumn ? ($(r.grid.settings()[0].nTable).children("thead").children("tr").children("th:last").after("<th>" + r.batchSettings.actionColumnName + "<\/th>"), r.batchSettings.customFooter ? $(r.grid.settings()[0].nTable).children("tfoot").children("tr").children("th:last").after("<th><\/th>") : $(r.grid.settings()[0].nTable).children("tfoot").children("tr").children("th:last").after("<th>" + r.batchSettings.actionColumnName + "<\/th>"), r.batchSettings.showActionsColumn = !0) : r.batchSettings.showActionsColumn = !1;
    $(n).on("draw.dt", function(t, i) {
        if ($(n + " tr td").attr("tabindex", "0"), r.batchSettings.showSelectionBox && $(n + " tr td:first-child").each(function(t, i) {
                var f = $(i).parent().attr("id"),
                    u;
                $(i).attr("data-commandcell") === undefined && (u = $.inArray(f, r.data.selected) > -1 ? 'checked="checked"' : "", $(i).before('<td data-commandcell="select"><input ' + u + ' type="checkbox" id="chkSelection' + n + "_checkbox_" + $(i).parent().attr("id") + '"><\/td>'))
            }), r.batchSettings.showActionsColumn && ($(n + " tr.dtbNew td:last-child").each(function(t, i) {
                var u, t;
                if ($(i).attr("data-actioncell") == undefined) {
                    for (u = DataTableBatchApi.generateDeleteButton(i, n, r.batchSettings.deleteNewButtonText, r.batchSettings.deleteButtonCss), t = 0; t < r.batchSettings.additionalActions.length; t++)(typeof r.batchSettings.additionalActions[t].newOnly == "undefined" || r.batchSettings.additionalActions[t].newOnly) && (u += r.batchSettings.additionalActions[t].markup);
                    $(i).after('<td data-actioncell="action">' + u + "<\/td>")
                }
            }), $(n + " tr:not(.dtbNew) td:last-child").each(function(t, i) {
                var f, u, t;
                if ($(i).attr("data-actioncell") == undefined) {
                    for (f = $(i).parent().attr("id"), u = $.inArray(f, r.data.deleted) === -1 ? DataTableBatchApi.generateDeleteButton(i, n, r.batchSettings.deleteButtonText, r.batchSettings.deleteButtonCss) : DataTableBatchApi.generateDeleteButton(i, n, r.batchSettings.unDeleteButtonText, r.batchSettings.unDeleteButtonCss, !0), t = 0; t < r.batchSettings.additionalActions.length; t++) typeof r.batchSettings.additionalActions[t].newOnly == "undefined" && (u += r.batchSettings.additionalActions[t].markup);
                    $(i).after('<td data-actioncell="action">' + u + "<\/td>")
                }
            }), $(n + " tr").each(function(n, t) {
                $(t).children().each(function(n, t) {
                    for (var u, i = 0; i < r.lstNumberRows.length; i++) u = r.lstNumberRows[i], r.batchSettings.showSelectionBox && (u = r.lstNumberRows[i] + 1), u == n && $(t).text(DataTableBatchApi.formatNumber($(t).text()))
                })
            })), r.footerSetup(), typeof r.batchSettings.onGridRendered != "undefined") r.batchSettings.onGridRendered(t, i);
        u()
    });
    r.data.addBlank = function() {
        for (var i = r.grid.columns(), n = {}, t = 0; t < i[0].length; t++) n[t] = "";
        n.DT_RowId = "dtbNew" + r.newCount;
        r.data.inserted[n.DT_RowId] = n;
        r.batchSettings.showSelectionBox && $("[data-commandcell]").remove();
        r.batchSettings.showActionsColumn && $("[data-actioncell]").remove();
        r.newCount++;
        r.grid.page(0).draw("page");
        r.data.processNewRecord(n)
    };
    r.data.addRecord = function(n) {
        for (var u = r.grid.columns(), t = {}, i = 0; i < u[0].length; i++) t[i] = n[i];
        t.DT_RowId = "dtbNew" + r.newCount;
        r.data.inserted[t.DT_RowId] = t;
        r.batchSettings.showSelectionBox && $("[data-commandcell]").remove();
        r.newCount++;
        r.data.processNewRecord(t)
    };
    r.data.processNewRecord = function(t) {
        var f = r.grid.row.add(t).draw(!1).nodes(),
            u = $(f).children("td:last-child"),
            i;
        for ($(f).addClass("dtbNew"), $(u).children("button").remove(), $(u).append(DataTableBatchApi.generateDeleteButton($(u), n, r.batchSettings.deleteNewButtonText, r.batchSettings.deleteButtonCss)), i = 0; i < r.batchSettings.additionalActions.length; i++)(typeof r.batchSettings.additionalActions[i].newOnly == "undefined" || r.batchSettings.additionalActions[i].newOnly) && $(u).append(r.batchSettings.additionalActions[i].markup)
    };
    $("html").on("click", n + " tbody tr td[data-commandcell]", function(n) {
        var t = $(this).parent().attr("id"),
            i = $.inArray(t, r.data.selected);
        if (i === -1 ? (r.data.selected.push(t), r.batchSettings.showSelectionBox && $(this).children("input").prop("checked", !0)) : (r.data.selected.splice(i, 1), r.batchSettings.showSelectionBox && $(this).children("input").prop("checked", !1)), $(this).parent().toggleClass("selected"), typeof r.batchSettings.onSelectionBoxClick != "undefined") r.batchSettings.onSelectionBoxClick(n, t, i);
        u()
    });
    $("html").on("click", n + " tbody tr td button[data-btn='delete']", function(n) {
        var t = $(this).parent().parent(),
            i;
        if ($(this).attr("data-action") === "delete" ? ($(this).html(r.batchSettings.unDeleteButtonText), $(this).attr("data-action", "undelete"), $(t).attr("data-deleted", !0), r.batchSettings.unDeleteButtonCss !== null && $(this).attr("class", r.batchSettings.unDeleteButtonCss), $(t).hasClass("dtbNew") ? (delete r.data.inserted[$(t).attr("id")], r.grid.row(t).remove().draw(!1)) : r.data.deleted.push($(t).attr("id"))) : ($(t).removeAttr("data-deleted"), r.batchSettings.DeleteButtonCss !== null && $(this).attr("class", r.batchSettings.DeleteButtonCss), $(this).parent().children("[data-btn='delete']").html(r.batchSettings.deleteButtonText), $(this).parent().children("[data-btn='delete']").attr("data-action", "delete"), i = DataTableBatchApi.getIndex(r.data.deleted, $(t).attr("id")), r.data.deleted.splice(i, 1)), r.footerSetup(), typeof r.batchSettings.onDeleteButtonClick != "undefined") r.batchSettings.onDeleteButtonClick(n);
        u()
    });
    $("html").on("focus", n + " tbody tr td", function(n) {
        var c = $(this),
            s = typeof r.batchSettings.activateEditModeCondition != "undefined" ? r.batchSettings.activateEditModeCondition(n, $(this).attr("data-editmode")) : !1,
            h, f, i, o;
        if (!s && !$(this).attr("data-commandcell") && !$(this).attr("data-editmode") && !$(this).attr("data-actioncell") && !$(this).parent().attr("data-deleted")) {
            var t = $(this).text(),
                e = r.editForm[DataTableBatchApi.findCellPosition($(this), r.batchSettings.showSelectionBox)].element,
                l = $(e).attr("type");
            if ($(e).attr("data-ishtml") == "true" && (t = $(this).html()), $(this).attr("data-editmode", "true"), l == "number" && (t = DataTableBatchApi.deformatNumber(t)), $(this).attr("data-oldvalue", t), $(this).html(e), $(this).children("input").length > 0) {
                r.editControl = "input";
                switch ($(this).children("input").attr("type")) {
                    case "checkbox":
                        h = $(this).children("input").attr("data-trueval");
                        t == h && $(this).children("input").attr("checked", "checked");
                        break;
                    case "number":
                        $($(this).children("input")).val(DataTableBatchApi.deformatNumber(t));
                        break;
                    default:
                        $($(this).children("input")).val(t)
                }
            } else if ($(this).children("select").length > 0)
                if (r.editControl = "select", f = $($(this).children("select")), i = DataTableBatchApi.findCellPosition($(this), r.batchSettings.showSelectionBox), r.editForm[i].call !== undefined)
                    if (r.editForm[i].cache && typeof r.cacheObjects["column" + i + "Data"] != "undefined") DataTableBatchApi.populateSelectList(f, r.cacheObjects["column" + i + "Data"]), f.val(t);
                    else {
                        if (o = {
                                url: r.editForm[i].call
                            }, typeof r.batchSettings.onCallForList != "undefined") r.batchSettings.onCallForList(i, o);
                        $.ajax(o).success(function(n) {
                            var u = JSON.parse(n);
                            if (typeof r.batchSettings.onCellListGet != "undefined") r.batchSettings.onCellListGet(i, u, c);
                            DataTableBatchApi.populateSelectList(f, u);
                            f.val(t);
                            r.editForm[i].cache && (r.cacheObjects["column" + i + "Data"] = u)
                        })
                    } else f.val(t);
            $(this).children(r.editControl).focus();
            u()
        }
        if (typeof r.batchSettings.onCellEnter != "undefined") r.batchSettings.onCellEnter(n, s)
    });
    $("html").on("focusout", n + " tbody tr td input,  tbody tr td select", function(t) {
        var s = $(this).parent().attr("data-oldvalue"),
            e = $(n + " tbody tr td[data-editmode]").children(r.editControl),
            h = e.attr("type"),
            a = $(n + " tbody tr td[data-editmode]"),
            i = h == "checkbox" ? DataTableBatchApi.getCheckBoxValue(e) : e.val(),
            c = i !== s,
            l = $(this).parent().parent().hasClass("dtbNew"),
            f = $(this).parent().parent().attr("id"),
            o = r.batchSettings.showSelectionBox ? parseInt($(this).parent().index()) - 1 : parseInt($(this).parent().index()),
            v, y;
        if (c && (l ? r.data.inserted[f][o] = i : (typeof r.data.edit[f] == "undefined" && (v = r.batchSettings.showSelectionBox ? 1 : 0, y = r.batchSettings.showSelectionBox ? r.grid.columns()[0].length + 1 : r.grid.columns()[0].length, r.data.edit[f] = $.grep(r.grid.data(), function(n) {
                return n.DT_RowId == f
            })[0]), r.data.edit[f][o] = i)), h == "number" && (i = DataTableBatchApi.formatNumber(i)), $(n + " tbody tr td[data-editmode]").html(i), $(n + " tbody tr td[data-editmode]").removeAttr("data-editmode"), typeof r.batchSettings.onCellLeave != "undefined") r.batchSettings.onCellLeave(t, s, i, c, l, f, o, a);
        r.footerSetup();
        u()
    });
    return u = function() {
        if (r.batchSettings.debug) {
            var n = "<div>Selected Items: <br />" + JSON.stringify(r.data.selected, null, 4) + "<\/div>";
            n += "<div>New Items: <br />" + JSON.stringify(r.data.inserted, null, 4) + "<\/div>";
            n += "<div>Deleted Items: <br />" + JSON.stringify(r.data.deleted, null, 4) + "<\/div>";
            n += "<div>Edited Items: <br />" + JSON.stringify(r.data.edit, null, 4) + "<\/div>";
            $("#dtbDebug").html(n)
        }
    }, u(), r
};
DataTableBatchApi.checkSetting = function(n, t, i) {
    typeof n == "undefined" ? typeof i != "undefined" && i() : t()
};
DataTableBatchApi.getIndex = function(n, t) {
    for (var r = null, i = 0; i < n.length; i++)
        if (n[i] === t) {
            r = i;
            break
        }
    return r
};
DataTableBatchApi.generateDeleteButton = function(n, t, i, r, u) {
    r = typeof r == "undefined" ? "" : 'class="' + r + '"';
    u = typeof u == "undefined" ? !1 : u;
    var f = u ? "undelete" : "delete";
    return '<button type="button" ' + r + ' data-action="' + f + '" data-btn="delete" id="btnDelete' + t + "_button_" + $(n).parent().attr("id") + '">' + i + "<\/button>"
};
DataTableBatchApi.findCellPosition = function(n, t) {
    var i = $(n).index();
    return t && i--, i
};
DataTableBatchApi.populateSelectList = function(n, t) {
    for (var r, i = 0; i < t.length; i++) r = typeof t[i].value == "undefined" ? t[i].text : t[i].value, n.append('<option value="' + r + '">' + t[i].text + "<\/option>")
};
DataTableBatchApi.getCheckBoxValue = function(n) {
    return n.is(":checked") ? n.attr("data-trueval") : n.attr("data-falseval")
};
DataTableBatchApi.formatNumber = function(n) {
    if (typeof DataTableBatchApi.formatNumberOverride != "undefined") return DataTableBatchApi.formatNumberOverride(n);
    n += "";
    x = n.split(".");
    x1 = x[0];
    x2 = x.length > 1 ? "." + x[1] : "";
    for (var t = /(\d+)(\d{3})/; t.test(x1);) x1 = x1.replace(t, "$1,$2");
    return x1 + x2
};
DataTableBatchApi.deformatNumber = function(n) {
    if (typeof DataTableBatchApi.deformatNumberOverride != "undefined") return DataTableBatchApi.deformatNumberOverride(n);
    var t = n.toString().replace(new RegExp("[,]", "g"), "");
    return parseFloat(t)
};
DataTableBatchApi.calculations = {};
DataTableBatchApi.calculations.sum = function(n, t, r, u) {
    var f = 0;
    for (i = 0; i < n.length; i++) $.inArray(n[i].DT_RowId, t) === -1 && (f += isNaN(parseFloat(n[i][r])) ? 0 : parseFloat(n[i][r]));
    return u ? DataTableBatchApi.formatNumber(f) : f
};
DataTableBatchApi.calculations.average = function(n, t, r, u) {
    var f = 0,
        e;
    for (i = 0; i < n.length; i++) $.inArray(n[i].DT_RowId, t) === -1 && (f += isNaN(parseFloat(n[i][r])) ? 0 : parseFloat(n[i][r]));
    return e = f == 0 || n.length == 0 ? 0 : f / n.length, u ? DataTableBatchApi.formatNumber(e) : e
};
DataTableBatchApi.calculations.max = function(n, t, r, u) {
    var f = [],
        e;
    for (i = 0; i < n.length; i++) $.inArray(n[i].DT_RowId, t) === -1 && (isNaN(parseFloat(n[i][r])) ? f.push(0) : f.push(parseFloat(n[i][r])));
    return e = Math.max.apply(Math, f), u ? DataTableBatchApi.formatNumber(e) : e
};
DataTableBatchApi.calculations.min = function(n, t, r, u) {
    var f = [],
        e;
    for (i = 0; i < n.length; i++) $.inArray(n[i].DT_RowId, t) === -1 && (isNaN(parseFloat(n[i][r])) ? f.push(0) : f.push(parseFloat(n[i][r])));
    return e = Math.min.apply(Math, f), u ? DataTableBatchApi.formatNumber(e) : e
};
DataTableBatchApi.calculations.range = function(n, t, i, r) {
    var f = DataTableBatchApi.calculations.max(n, t, i, !1),
        e = DataTableBatchApi.calculations.min(n, t, i, !1),
        u = f - e;
    return r ? DataTableBatchApi.formatNumber(u) : u
}
